#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir>

# fail fast
set -e

logger -p user.notice -t "slugc[$$]" "language_pack_java java_compile_start"

BIN_DIR=$(cd $(dirname $0); pwd) # absolute path
# parse args
BUILD_DIR=$1
CACHE_DIR=$2

#create the cache dir if it doesn't exist
mkdir -p $CACHE_DIR

cd $BUILD_DIR
if [ -d "$CACHE_DIR/.jdk7" ]; then
  echo -n "copying jdk to app"
  cp -r "$CACHE_DIR/.jdk7" $BUILD_DIR
  echo " done"
fi

OPENJDK7_URL="https://s3.amazonaws.com/heroku-jvm-langpack-java/openjdk7-u2-heroku-temaki.tar.gz"

if [ ! -d "$BUILD_DIR/.jdk7" ]; then
  echo -n "-----> Installing OpenJDK7u2 build (to .jdk7)....."
  mkdir "$BUILD_DIR/.jdk7"
  cd "$BUILD_DIR/.jdk7"
  curl --max-time 180 --location $OPENJDK7_URL | tar xz
  cd $BUILD_DIR
  cp -r .jdk7 $CACHE_DIR/.jdk7
  echo " done"
fi

if [ -d "$CACHE_DIR/.vertx" ]; then
  echo -n "copying vertx to app"
  cp -r "$CACHE_DIR/.vertx" $BUILD_DIR
  echo " done"
fi

VERTX_URL="http://dl.bintray.com/vertx/downloads/vert.x-2.1.4.tar.gz"

if [ ! -d "$BUILD_DIR/.vertx" ]; then
  echo -n "-----> Installing Vert.x build (to .vertx)....."
  curl --max-time 320 --location $VERTX_URL | tar xz
  mv vert* .vertx
  rm '.vertx/bin/vertx.bat'
  cd $BUILD_DIR
  cp -r .vertx $CACHE_DIR/.vertx
  echo " done"
fi

# change to cache dir to install maven
cd $CACHE_DIR

# install maven with base repository
MAVEN_URL="http://s3.amazonaws.com/heroku-jvm-langpack-java/maven.tar.gz"

if [ ! -d .maven ]; then
  echo -n "-----> Installing Maven 3.0.3..."
  curl --silent --max-time 60 --location $MAVEN_URL | tar xz
  chmod +x .maven/bin/mvn
  echo " done"
fi

MAVEN_SETTINGS_URL="http://s3.amazonaws.com/heroku-jvm-langpack-java/settings.xml"

echo -n "-----> Installing settings.xml..."
if [ -f .m2/settings.xml ]; then
  rm .m2/settings.xml 
fi
curl --silent --max-time 10 --location $MAVEN_SETTINGS_URL --output .m2/settings.xml
echo " done"


cd $BUILD_DIR

export JAVA_HOME="$BUILD_DIR/.jdk7"
export VERTX_HOME="$BUILD_DIR/.vertx"
export PATH=$JAVA_HOME/bin:$VERTX_HOME/bin:$PATH

echo "Path is set to"
echo $PATH

export MAVEN_OPTS="-Xmx512m"

# build app
BUILDCMD="$CACHE_DIR/.maven/bin/mvn -B -Duser.home=$BUILD_DIR -Dmaven.repo.local=$CACHE_DIR/.m2/repository -s $CACHE_DIR/.m2/settings.xml -DskipTests=true clean install"
echo "-----> executing $BUILDCMD"

$BUILDCMD 2>&1 | sed -u 's/^/       /'

if [ "${PIPESTATUS[*]}" != "0 0" ]; then
  echo " !     Failed to build app with Maven"
  exit 1
fi

for DIR in ".m2" ".maven" ; do
  cp -r $CACHE_DIR/$DIR $DIR
done

# Warn if no Procfile is present
if [ ! -f Procfile ]; then
  [ -f 'app.json' ] && CONF='-conf app.json'
  echo "-----> No Procfile found. Will use the following default process: "
  echo "       vertx run server.js ${CONF}"
fi

logger -p user.notice -t "slugc[$$]" "language_pack_java java_compile_end"
